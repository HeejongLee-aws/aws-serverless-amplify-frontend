{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "An auto-generated nested stack.",
    "Parameters": {
        "AppSyncApiId": {
          "Type": "String",
          "Description": "The id of the AppSync API associated with this project."
        },
        "ArtistBackendServiceEndpoint": {
          "Type": "String",
          "Description": "ArtistBackendServiceEndPoint."
        },
        "S3DeploymentBucket": {
            "Type": "String",
            "Description": "The S3 bucket containing all deployment assets for the project."
        },
        "S3DeploymentRootKey": {
        "Type": "String",
        "Description": "An S3 key relative to the S3DeploymentBucket that points to the root\nof the deployment directory."
        }
    },
    "Resources": {
        "AppSyncDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
                "ApiId": {
                    "Ref": "AppSyncApiId"
                },
                "Description": "appsync backend data source",
                "HttpConfig": {
                    "Endpoint": {
                        "Ref": "ArtistBackendServiceEndpoint"
                    },
                    "AuthorizationConfig": {
                        "AuthorizationType": "AWS_IAM",
                        "AwsIamConfig": {
                            "SigningRegion": {
                                "Fn::Sub": "${AWS::Region}"
                            },
                            "SigningServiceName": "appsync"
                        }
                    }
                },
                "Name": "ArtistBackendService",
                "Type": "HTTP",
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "AppSyncBackendDataSourceIamRole",
                        "Arn"
                    ]
                }
            }
        },
        "AppSyncBackendDataSourceIamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "appsync.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Description": "Role assigned to OrderServiceDataSource",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": "appsync:GraphQL",
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:appsync:${AWS::Region}:${AWS::AccountId}:apis/*"
                                    }
                                }
                            ]
                        },
                        "PolicyName": "AppSyncBackendDataSourceIamPolicy"
                    }
                ]
            }
        },
        "QueryGetConcertsByArtistIdResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
              "ApiId": {
                "Ref": "AppSyncApiId"
              },
              "DataSourceName": {
                "Fn::GetAtt": [
                    "AppSyncDataSource",
                    "Name"
                  ]
              },
              "TypeName": "Query",
              "FieldName": "getConcertsByArtistId",
              "RequestMappingTemplateS3Location": {
                "Fn::Sub": [
                  "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/Query.getConcertsByArtistId.req.vtl",
                  {
                    "S3DeploymentBucket": {
                      "Ref": "S3DeploymentBucket"
                    },
                    "S3DeploymentRootKey": {
                      "Ref": "S3DeploymentRootKey"
                    }
                  }
                ]
              },
              "ResponseMappingTemplateS3Location": {
                "Fn::Sub": [
                  "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/Query.getConcertsByArtistId.res.vtl",
                  {
                    "S3DeploymentBucket": {
                      "Ref": "S3DeploymentBucket"
                    },
                    "S3DeploymentRootKey": {
                      "Ref": "S3DeploymentRootKey"
                    }
                  }
                ]
              }
            }
        }
    }
  }